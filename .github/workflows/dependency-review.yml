# Dependency Review (hardened, pinned, least-privilege)
# =============================================================================
# What this does:
#   • On PRs that *touch dependency manifests*, run GitHub’s Dependency Review.
#   • Annotate the PR and (optionally) comment a summary.
#   • You can gate merges by failing on severity/CVSS (leave commented until ready).
#
# Why it looks this way (best practices):
#   • Default-deny permissions at workflow level; job elevates only what it needs.
#   • Pin third-party actions to *commit SHAs* for tamper-resistance.
#   • Guard untrusted PRs (use `pull_request`, not `pull_request_target`).
#   • Concurrency cancels superseded runs to avoid CI pile-ups.
#   • Timeouts cap spend and fail fast.
#   • Harden runner egress (start in audit; later block + allowlist).
#   • Scoped checkout creds (no push in this job → don’t persist token).
#   • Trigger only when relevant files change (dependency manifests).

name: Dependency review

on:
  pull_request:
    # Narrow to main (tune to your branching model)
    branches: [ "main" ]
    # Trigger only when dependency manifests change (add/remove as needed)
    paths:
      - "**/package.json"
      - "**/package-lock.json"
      - "**/yarn.lock"
      - "**/pnpm-lock.yaml"
      - "**/pom.xml"
      - "**/build.gradle"
      - "**/build.gradle.kts"
      - "**/gradle.lockfile"
      - "**/go.mod"
      - "**/go.sum"
      - "**/requirements*.txt"
      - "**/Pipfile"
      - "**/Pipfile.lock"
      - "**/pyproject.toml"
      - "**/poetry.lock"
      - "**/Gemfile"
      - "**/Gemfile.lock"
      - "**/composer.json"
      - "**/composer.lock"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
      - ".github/workflows/dependency-review.yml"

# Cancel superseded runs on the same PR/ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

# Default-deny at the workflow level
permissions:
  contents: read
  # NOTE: We'll grant PR write at the *job* level only if we actually comment in the PR.

jobs:
  dependency-review:
    name: Dependency review
    runs-on: ubuntu-24.04                # Explicit runner for reproducibility
    timeout-minutes: 10                  # Cap runtime; this action is fast

    # Least privilege for this job:
    # - contents: read     → checkout
    # - pull-requests: write → ONLY required if we post a PR comment (comment-summary-in-pr != "never")
    permissions:
      contents: read
      pull-requests: write

    steps:
      # Harden egress. Start in audit; once stable, flip to block + allowlist.
      - name: Harden runner (egress audit)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
          # For stricter posture later:
          # egress-policy: block
          # allowed-endpoints: >
          #   api.github.com:443
          #   github.com:443
          #   objects.githubusercontent.com:443

      # Checkout with no persisted credentials (we won't push)
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: 0  # full history; harmless here

      # Run Dependency Review
      # Docs: https://github.com/actions/dependency-review-action#configuration-options
      # Key options:
      #   comment-summary-in-pr: when to post a summary comment ("always" | "on-failure" | "never")
      #   fail-on-severity:      set to (low|moderate|high|critical) to gate merges
      #   fail-on-cvss:          numeric CVSS threshold (e.g., 7.0)
      #   deny-licenses:         comma-separated SPDX IDs to block
      #   allow-ghsas/deny-ghsas: allowlist/denylist specific GHSA IDs
      - name: Dependency Review
        uses: actions/dependency-review-action@595b5aeba73380359d98a5e087f648dbb0edce1b # v4.7.3
        with:
          # Post a summary comment on every run (requires pull-requests: write above).
          comment-summary-in-pr: always

          # --- Enforcement knobs (uncomment to gate merges) ---
          # fail-on-severity: moderate     # block PR if any vuln ≥ moderate
          # fail-on-cvss: 7                # or gate by CVSS score
          # deny-licenses: GPL-1.0-or-later, LGPL-2.0-or-later

          # --- Build-system edge cases ---
          # retry-on-snapshot-warnings: true  # helpful for Maven snapshots
          # retry-on-snapshot-warnings-timeout: 60
