name: Codacy Security Scan

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - "**/*"
      - ".github/workflows/codacy.yml"
  push:
    branches: [ "main" ]
    paths:
      - "**/*"
      - ".github/workflows/codacy.yml"
  schedule:
    - cron: "16 7 * * 2"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  codacy-scan:
    name: Codacy scan → split SARIF
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    permissions:
      contents: read
      actions: read
    outputs:
      sarif_files: ${{ steps.split.outputs.sarif_files }}
    env:
      SARIF_OUT: results.sarif

    steps:
      - name: Harden runner (egress audit)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: 0

      # Run Codacy; keep green so we always split+upload
      - name: Run Codacy Analysis CLI
        continue-on-error: true
        uses: codacy/codacy-analysis-cli-action@562ee3e92b8e92df8b67e0a5ff8aa8e261919c08 # v4.4.7
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          format: sarif
          output: ${{ env.SARIF_OUT }}
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647

      # Split multi-run SARIF → many single-run SARIFs under reports/
      - name: Split SARIF into single-run files
        id: split
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p reports
          if [[ ! -s "${SARIF_OUT}" ]]; then
            echo "sarif_files=[]" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          python - <<'PY'
          import json, os, re, pathlib
          sarif = os.environ.get("SARIF_OUT", "results.sarif")
          outdir = pathlib.Path("reports"); outdir.mkdir(parents=True, exist_ok=True)
          files = []
          with open(sarif, "r", encoding="utf-8") as f:
            data = json.load(f)
          runs = data.get("runs", [])
          for i, run in enumerate(runs, 1):
            tool = ((run.get("tool") or {}).get("driver") or {})
            name = tool.get("name") or f"run{i}"
            slug = re.sub(r"[^A-Za-z0-9._-]+", "-", name).strip("-").lower() or f"run{i}"
            out = {"version": data.get("version","2.1.0"),
                   "$schema": data.get("$schema","https://json.schemastore.org/sarif-2.1.0.json"),
                   "runs": [run]}
            path = outdir / f"codacy-{slug}.sarif"
            with open(path, "w", encoding="utf-8") as wf:
              json.dump(out, wf, ensure_ascii=False)
            files.append({"file": str(path), "category": f"codacy-{slug}"})
          with open(os.environ["GITHUB_OUTPUT"], "a", encoding="utf-8") as go:
            go.write("sarif_files=" + json.dumps(files) + "\n")
          print(f"Split into {len(files)} file(s)")
          PY

      - name: Upload split SARIFs as artifact
        if: always() && hashFiles('reports/*.sarif') != ''
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: codacy-sarif-split
          path: reports/*.sarif
          retention-days: 14

  upload-to-code-scanning:
    name: Upload single-run SARIFs
    needs: codacy-scan
    if: ${{ needs.codacy-scan.outputs.sarif_files != '' && needs.codacy-scan.outputs.sarif_files != '[]' }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    permissions:
      contents: read
      security-events: write     # only the uploader needs this
      actions: read
    strategy:
      fail-fast: false
      matrix:
        item: ${{ fromJson(needs.codacy-scan.outputs.sarif_files) }}
    steps:
      - name: Harden runner (egress audit)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Download split SARIFs
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: codacy-sarif-split
          path: reports

      - name: Upload SARIF (single run)
        uses: github/codeql-action/upload-sarif@3c3833e0f8c1c83d449a7478aa59c036a9165498 # v3.29.11
        with:
          sarif_file: ${{ matrix.item.file }}
          category: ${{ matrix.item.category }}
